generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categorysensors {
  id        Int     @id @default(autoincrement())
  sensor String? @db.VarChar(120)
  sensors sensors[]
}

model sensors {
  id           Int    @default(autoincrement())
  idDistr      Int
  idSensor     Int
  value     String @db.VarChar(50)

  @@id([id])
  @@index([idDistr], map: "idDistr")
  @@index([idSensor], map: "idSensor")

  distr distributeur @relation(fields: [idDistr], references: [id])
  categorysensors categorysensors @relation(fields: [idSensor], references: [id])
}


model categorie {
  id        Int     @id @default(autoincrement())
  categorie String? @db.VarChar(120)
}

model categoryrecette {
  id          Int     @id @default(autoincrement())
  description String? @db.VarChar(120)
  recette recette[]
  publicite publicite[]
}

model commande {
  id           Int    @default(autoincrement())
  idRecette    Int
  idIngredient Int?
  quantity     String @db.VarChar(50)

  @@id([id])
  @@index([idRecette], map: "idRecette")
  @@index([idIngredient], map: "idIngredient")

  recette recette @relation(fields: [idRecette], references: [id])
}

model distributeur {
  id             Int  @id @default(autoincrement())
  identifiant    String @db.VarChar(250) @unique
  capaciteGoblet Int?
  capaciteSucre  Int?
  capaciteSpoon  Int?
  pack pack?
  sensors sensors[]
}

model entrepise {
  id      Int     @id @default(autoincrement())
  nom     String? @db.VarChar(120)
  adresse String? @db.VarChar(120)
  mail    String? @db.VarChar(120)
  tel     String? @db.VarChar(120)
  link    String? @db.VarChar(120)
  pack pack[]
  users users[]
  task task[]
  
}

model facture {
  id            Int  @id @default(autoincrement())
  idDistr       Int?
  idComm        Int?
  idInfoPaiment Int?

  @@index([idComm], map: "idComm")
  @@index([idDistr], map: "idDistr")
  @@index([idInfoPaiment], map: "idInfoPaiment")
}

model infopaiment {
  id           Int     @id @default(autoincrement())
  mail         String? @db.VarChar(120)
  cartePaiment String? @db.VarChar(120)
  ccv          String? @db.VarChar(120)
}

model pack {
  idDistr      Int @unique
  idEntre      Int
  codeverou    String? @db.VarChar(120)
  localisation String? @db.VarChar(120)
  state        String? @db.VarChar(120)
  distr distributeur @relation(fields: [idDistr], references: [id])
  entre entrepise @relation(fields: [idEntre], references: [id])
  @@id([idDistr, idEntre])
  @@index([idEntre], map: "idEntre")
  
}

model publicite {
  id          Int     @id @default(autoincrement())
  url         String? @db.VarChar(120)
  idCategorie Int?
  idCategRecette Int?
  idAnnonceur Int?
  categoryrecette categoryrecette? @relation(fields: [idCategRecette], references: [id])
  @@index([idAnnonceur], map: "idAnnonceur")
  @@index([idCategRecette], map: "idCategRecette")
  @@index([idCategorie], map: "idCategorie")
}

model recette {
  id             Int     @id @default(autoincrement())
  idCategRecette Int? 
  name    String? @db.VarChar(120)
  description String? @db.VarChar(500)
  price Decimal @default(0.0)
  imageLink String? @db.VarChar(120)

  @@index([idCategRecette], map: "idCategRecette")
  commande commande[]
  categoryrecette categoryrecette? @relation(fields: [idCategRecette], references: [id])
  recetteingr recetteingr[]
}

model reclamation {
  id        Int      @id @default(autoincrement())
  idFacture Int?
  message   String?  @db.VarChar(120)
  isDone    Boolean?

  @@index([idFacture], map: "idFacture")
}

model task {
  id      Int      @id @default(autoincrement())
  idDistr Int
  idUser  Int?
  idEntre Int
  idType  Int 
  isDone  Boolean @default(false)
  isOpen Boolean  @default(false)
  date String
  time String
  message String  @db.VarChar(120)

  typetask typetask? @relation(fields: [idType], references: [id])
  userAM users? @relation(fields: [idUser], references: [id])
  entreprise entrepise? @relation(fields: [idEntre], references: [id])


  @@index([idDistr], map: "idDistr")
  @@index([idEntre], map: "idEntre")
  @@index([idUser], map: "idUser")
  @@index([idType], map: "idType")
}

model users {
  id           Int     @id @default(autoincrement())
  nom          String? @db.VarChar(120)
  prenom       String? @db.VarChar(120)
  mail         String? @db.VarChar(120)
  mdp          String? @db.VarChar(120)
  tel          String? @db.VarChar(120)
  idRole       Int?
  idCreatedpar Int?
  idEntreprise Int?
  isActive     Int?

  task task[]
  
  @@index([idCreatedpar], map: "idCreatedpar")
  @@index([idEntreprise], map: "idEntreprise")
  @@index([idRole], map: "idRole")

  entreprise entrepise? @relation(fields: [idEntreprise], references: [id])
}

model annonceur {
  id           Int     @id @default(autoincrement())
  nom          String? @db.VarChar(120)
  prenom       String? @db.VarChar(120)
  mail         String? @db.VarChar(120)
  tel          String? @db.VarChar(120)
  idCreatedpar Int?

  @@index([idCreatedpar], map: "idCreatedpar")
}

model ingredient {
  id          Int     @id @default(autoincrement())
  type        Int?
  description String? @db.VarChar(120)
  prixUnit    Int?
}

model recetteingr {
  idRecette    Int
  idIngredient Int
  quantity     String? @db.VarChar(50)

  @@id([idRecette, idIngredient])
  @@index([idIngredient], map: "idIngredient")
  
  recette recette @relation(fields: [idRecette], references: [id])
}

model role {
  id          Int     @id @default(autoincrement())
  description String? @db.VarChar(120)
}

model typetask {
  id          Int     @id @default(autoincrement())
  identifiant String @unique
  description String? @db.VarChar(120)


  task task[]
}